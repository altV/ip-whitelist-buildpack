daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] %>;
pid /app/nginx.pid;
error_log stderr;

env IP_WHITELISTER_DEBUG_PASSTHROUGH;
env IP_WHITELISTER_REDIS_DB_URL;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    <% if ENV['NGINX_GZIP_ENABLED'] == '1' %>
    gzip on;
    gzip_disable msie6;
    gzip_min_length 512;
    gzip_proxied <%= ENV['NGINX_GZIP_PROXIED'] %>;
    gzip_types <%= ENV['NGINX_GZIP_TYPES'] %>;
    <% end %>

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log /dev/stderr l2met;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Increase default upload size from 1M to allow uploading larger images.
    client_max_body_size 10M;

    upstream app_server {
        server 127.0.0.1:<%= ENV['ORIG_APP_PORT'] %> fail_timeout=0;
    }

    server {
        listen <%= ENV['NGINX_LISTEN'] %>;
        server_name _;
        keepalive_timeout 5;
        resolver 8.8.8.8;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;

            set_real_ip_from  10.0.0.0/8;
            set_real_ip_from  172.16.0.0/12;
            set_real_ip_from  192.168.0.0/16;
            real_ip_header    X-Forwarded-For;
            real_ip_recursive off;

            access_by_lua_file "vendor/nginx_lua/access.lua";
        }
    }

    # relative to location of nginx.conf
    include nginx-local*.conf;
}
